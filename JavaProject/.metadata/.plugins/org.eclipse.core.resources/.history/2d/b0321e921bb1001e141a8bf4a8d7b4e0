package day0112;

import java.util.Scanner;

//추상클래스 이자 부모클래스 형성
abstract class Board {

	public abstract void play();

}
///////////////////

class Insert extends Board {
	@Override
	public void play() {
		// TODO Auto-generated method stub
		System.out.println("입력합니다");
	}
}

////////////////////

class Select extends Board {
	@Override
	public void play() {
		// TODO Auto-generated method stub
		System.out.println("출력합니다.");
	}
}

////////////////////
class Updata extends Board {
	@Override
	public void play() {
		// TODO Auto-generated method stub
		System.out.println("수정합니다.");
	}
}

////////////////////
class Delete extends Board {
	@Override
	public void play() {
		// TODO Auto-generated method stub
		System.out.println("삭제합니다.");
	}
}

/////////////////////

public class Abstrack_12 {

	public static void main(String[] args) {
		// 다형성으로 생성 메서드 출력

		/*
		 * Board board;
		 * 
		 * board = new Insert(); 
		 * board.play();
		 * 
		 * board = new Select(); 
		 * board.play();
		 * 
		 * board = new Updata(); 
		 * board.play();
		 * 
		 * board = new Delete(); 
		 * board.play();
		 */

		/////// Board board = new Board(); 추상클래스는 new로 생성못함

		Scanner in = new Scanner(System.in);
		int num = 0;

		Board board = null; // 부모클래스 선언만 해놓음.

		while (true) {
			System.out.println("1.쓰기 2.조회 3.수정 4.삭제 5.그외 숫자 종료");
			num = in.nextInt();

			switch (num) {
			case 1:
				board = new Insert();
				break;
			case 2:
				board = new Select();
				break;
			case 3:
				board = new Updata();
				break;
			case 4:
				board = new Delete();
				break;
			default:
				System.out.println("종료합니다.");
				System.exit(0); //강제종료하는 방법
			}
			board.play();
		}

	}

}

/*인터페이스는 상수 또는 추상메서에서만 사용가능
 * 클래스가 인터페이스를 구현해서 가져올떄는 implement 또 임플리먼트는 상속을 받아서 사용
 * 클래스가 인터페이스를 구현하지만, 인터페이스가 인터페이스를 상속해서 사용하지 않음 (extends)
 * 
 */
