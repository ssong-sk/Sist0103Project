package day0112;

class Shop {

	private String reName;
	private int won;
	private String color;

	static int no;

	public Shop(String re, int wo, String co) {
		this.reName = re;
		this.won = wo;
		this.color = co;

	}

	public static void getShop() {
		System.out.println("[");
		System.out.println("번호\t상품명\t가격\t색상");
		System.out.println("================================");
	
	}

	// 출력
	public void showSangPums() {
		no++;
		System.out.println(no + "\t" + reName + "\t" + won + "\t" + color);
	}

}

//
public class ArrReview_02 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		Shop[] sh = { new Shop("요가매트", 25000, "pink"), 
				new Shop("아령", 18000, "black"),
				new Shop("레깅스", 45000, "beige"), 
				new Shop("나시", 22000, "white") };

		Shop.getShop();
		for(Shop s : sh) {
			s.showSangPums();
		}
		
		for(int i = 0; i < sh.length; i++) {
			sh[i].showSangPums();
		}
	}
}


/*상속 부모객체가 자식객체에게 물려주는것.
 * 자식이 더 커지는 개념 extend라는 예약어를 사용하는데 상속한다라는 개념으로 사용 
 * is a 부모로부터 받는 개념.
 * 자식이 부모 메서드를 물려받는것을 오버라이딩. (필수적인 것은 아님/가져와서 완성시키는것)
 * 이름이 같을 수 있는 메서드를 생성자가 수많은걸 만들어도 인자값을 다르게 사용하는것을 오버로딩.
 * 
 */
